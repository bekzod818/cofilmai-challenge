generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid()) @db.VarChar(255)
  email     String    @unique @db.VarChar(255)
  password  String?   @db.VarChar(255)
  name      String?   @db.VarChar(255)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
  deletedAt DateTime?
}


// NOTE: This is a test model for TrendingMusic. It can be enriched based on consumed data.
model TrendingMusic {
  id        Int     @id @default(autoincrement())
  author    String?
  data      TrendingData? @relation(fields: [data_id], references: [id])
  data_id   Int?
}

// NOTE: This is a test model for TrendingData. It can be enriched based on consumed data.
model TrendingData {
  id                  Int     @id @default(autoincrement())
  hashtag             String  @db.VarChar(64)
  postAuthorNickname  String  @db.VarChar()
  musics              TrendingMusic[]
  description         String  @db.Text
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
  deletedAt DateTime?
}
